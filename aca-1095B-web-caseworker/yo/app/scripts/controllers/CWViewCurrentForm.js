/**
 * Created by pchavan on 12/11/2015.
 */

'use strict';

(function () {

  function CWViewCurrentForm ($scope, $state, $log, $sce, $timeout, CWService, confirmationDialog){
    $timeout(function(){
      $('.screen-title').focus();
    },5);
    /** Screen Labels **/
    $scope.label = {
      titleAction : "View",
      titleDescription : "Current Form",

      lastModified : "Last Modified", comments : "Comments",
      generatedBy : "Generated By"
    };

    $scope.iconstatus = {
      editiconstatus:false,
      editiconenable:false,
      pdficonstatus:false,
      pdfprocessstatus:false,
      pdfstatuscolor:'green',
      mailiconstatus:false,
      mailiconenable:false
    };

    $scope.labelCustomer = {
      pdfstatus:"Form Status:",
      fName:"First Name:",
      lName:"Last Name:",
      dob:"DOB:",
      ssn: "SSN:",
      address:"Address:",
      city:"City:",
      state:"State:",
      zipcode:"Zip:",
      comment:"Comments:"
    };

    $scope.dataLoad = false;
    $scope.pdfLoad = false;
    $scope.initController = function(){
      $scope.currentFormView  = CWService.getCurrentData();
      if(typeof $scope.currentFormView !== 'undefined'){
        $scope.dataLoad = true;
        $scope.ariaLabel = {
          title : "You are viewing the most recent genereated PDF version of the form"
        };
        switch($scope.currentFormView.currentForm.pdfStatus){
          case'GENERATED':
            $scope.iconstatus={
              diticonstatus:false,
              editiconenable:false,
              pdficonstatus:false,
              pdficonenable:false,
              pdfprocessstatus:false,
              mailiconstatus:true,
              mailiconenable:true
            };
            break;
          case'REGENERATED':
            $scope.iconstatus={
              diticonstatus:false,
              editiconenable:false,
              pdficonstatus:false,
              pdficonenable:false,
              pdfprocessstatus:false,
              mailiconstatus:true,
              mailiconenable:false
            };
            break;
          case'GENERATION_FAILED':
            $scope.iconstatus={
              diticonstatus:false,
              editiconenable:false,
              pdficonstatus:false,
              pdficonenable:false,
              pdfprocessstatus:false,
              mailiconstatus:true,
              mailiconenable:false
            };
            break;
          case'ADDRESS_INVALID':
            $scope.iconstatus={
              editiconstatus:false,
              editiconenable:true,
              pdficonstatus:false,
              pdficonenable:true,
              pdfprocessstatus:false,
              mailiconstatus:true,
              mailiconenable:false
            };
            break;
          default:
            $scope.icon={
              editiconstatus:false,
              editiconenable:false,
              pdficonstatus:false,
              pdficonenable:false,
              pdfprocessstatus:false,
              mailiconstatus:false,
              mailiconenable:false
            };
            break;
        };
        CWService.getCurrentDataPdf($scope.currentFormView.currentForm.formID)
          .success(function(data){
            var file = new Blob([data], {type: 'application/pdf'});
            if(window.navigator.msSaveOrOpenBlob){
              $scope.fileObject = {
                fileUrl: null,
                type: "pdf",
                filePDF : file
              };
            }
            else{
              var fileURL = window.URL.createObjectURL(file);
              $scope.pdfUrl = $sce.trustAsResourceUrl(fileURL);
              $scope.fileObject = {
                fileUrl: $scope.pdfUrl,
                type: "pdf",
                filePDF : null
              };
            }
            $scope.pdfLoad = true;
          })
          .error(function(data){
            $scope.pdfLoad = false;
          })
      }
    };

    $scope.initController();

    /*** Send by mail **/

    $scope.sendMailMsg = {
      "successLabel" : "Your 1095-B form has been successfully processed to be sent by mail.",
      "errorLabel": "Error in mailing request."
    };

    $scope.sendByMailConfirm = function(){
      var currentForm = $scope.currentFormView.currentForm;
      var modalAttribute = {
        windowClass: 'center-modal',
        animation: true,
        templateUrl: 'views/templates/confirmationDialog.html',
        label : {
          title: 'Mail 1095-B Form',
          noAction: 'No',
          yesAction: 'Proceed',
          description: 'Are you sure you checked the data before mailing ?'
        },
        modalSize : 'large'
      };
      if(currentForm.mailStatus === CWService.constants.mailPending){
        modalAttribute.label = {
          title: '1095-B Form is in progress',
          noAction: 'No',
          yesAction: 'Proceed',
          description: 'Would you like to request another copy of the form to be mailed ?'
        };
      }
      else if(currentForm.mailStatus === CWService.constants.mailComplete){
        var todayDate = new Date();
        var fiveDayInterval = new Date(currentForm.printDate);
        fiveDayInterval.setDate(fiveDayInterval.getDate() + 5);
        if(todayDate < fiveDayInterval){
          modalAttribute.label = {
            title: 'Mail of requested 1095-B Form has been completed less than 5 days ago',
            noAction: 'No',
            yesAction: 'Proceed',
            description: 'Would you like to request another copy of the form to be mailed ?'
          };
        }else{

        }
      }
      else{
        modalAttribute.label = {
          title: 'Mail 1095-B Form',
          noAction: 'No',
          yesAction: 'Proceed',
          description: 'Are you sure you checked the data before mailing ?'
        };
      }
      confirmationDialog.openModal(modalAttribute,  $scope.sendByMail, $scope.closeModal, $scope.closeModal);
    };

    $scope.sendByMail = function(){
      CWService.mailRequest($scope.currentFormView.currentForm.formID).success(function(data){
          if(data=== CWService.constants.readyToMail){
            $scope.sendMailSuccess = true;
            $scope.sendMailFail = false;
            $scope.currentFormView.currentForm.mailStatus = data;
          }
          else{
            $scope.sendMailSuccess = false;
            $scope.sendMailFail = true;
          }
          confirmationDialog.modalBx.close();
        }
      ).error(function(){
          $scope.sendMailSuccess = false;
          $scope.sendMailError = true;
          confirmationDialog.modalBx.close();
        });
    };

    $scope.closeModal = function(){
      confirmationDialog.modalBx.close();
    };
  }

  angular.module('aca1095BUiAppCW').controller('CWViewCurrentForm', ['$scope', '$state', '$log', '$sce', '$timeout', 'CWService', 'confirmationDialog', CWViewCurrentForm]);
}());
